!function(c){var n={};function r(l){if(n[l])return n[l].exports;var t=n[l]={i:l,l:!1,exports:{}};return c[l].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.m=c,r.c=n,r.d=function(c,n,l){r.o(c,n)||Object.defineProperty(c,n,{enumerable:!0,get:l})},r.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},r.t=function(c,n){if(1&n&&(c=r(c)),8&n)return c;if(4&n&&"object"==typeof c&&c&&c.__esModule)return c;var l=Object.create(null);if(r.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:c}),2&n&&"string"!=typeof c)for(var t in c)r.d(l,t,function(n){return c[n]}.bind(null,t));return l},r.n=function(c){var n=c&&c.__esModule?function(){return c.default}:function(){return c};return r.d(n,"a",n),n},r.o=function(c,n){return Object.prototype.hasOwnProperty.call(c,n)},r.p="../../",r(r.s=1)}({0:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./game/js/modules/launchSound.js\n\r\n\r\nfunction launchSound(sound, isChangable, loop, isInitial) {\r\n  let source = "sounds/" + sound + ".mp3";\r\n\r\n  if (isChangable) {\r\n    $(\'#homeAudio\').attr(\'src\', source);\r\n    $(\'#homeAudio\').attr(\'loop\', loop);\r\n    document.getElementById(\'homeAudio\').play();\r\n  } else {\r\n    let myAudio = new Audio;\r\n    myAudio.src = source;\r\n    myAudio.loop = loop;\r\n    myAudio.play();\r\n\r\n    if (isInitial) {\r\n      myAudio.setAttribute(\'id\', \'homeAudio\');\r\n      $(".gameWindow").append(myAudio);\r\n    }\r\n  }\r\n}\r\n\r\nfunction pauseTheSound() {\r\n  document.getElementById(\'homeAudio\').pause();\r\n}\r\n\r\nfunction resumeTheSound() {\r\n    let play = document.getElementById(\'homeAudio\').play;\r\n    play.call(document.getElementById(\'homeAudio\'));\r\n}\r\n\r\nfunction changeVolume(number) {\r\n  document.getElementById(\'homeAudio\').volume *= number;\r\n  console.log(document.getElementById(\'homeAudio\').volume);\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/launchInitialWindow.js\n\r\n\r\nfunction launchInitialWindow() {\r\n\r\n  launchLoader();\r\n  launchSound("Caketown", false, true, true);\r\n}\r\n\r\n\r\nfunction   launchLoader() {\r\n  $(window).on(\'load\', function() {\r\n    let preloader = $(\'.loaderArea\');\r\n    let loader = preloader.find(\'.loader\');\r\n    loader.fadeOut();\r\n    preloader.delay(350).fadeOut(\'slow\');\r\n  });\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/classes/User.js\nclass User {\r\n  constructor(name, surname, email) {\r\n    this.name = name;\r\n    this.surname = surname;\r\n    this.email = email;\r\n    this.score = 0;\r\n  }\r\n\r\n  get fullName() {\r\n    return `${this.name} ${this.surname}`;\r\n  }\r\n\r\n  set fullName(newValue) {\r\n    [this.name, this.surname] = newValue.split(\' \');\r\n  }\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/addUserDataToLocalStorage.js\n\r\n\r\n\r\n\r\nconst addUserDataToLocalStorage_usersStorage = localStorage.getItem("users");\r\nlet user;\r\n\r\nlet usersArray;\r\n\r\nfunction addUserDataToLocalStorage() {\r\n  user = new User($(\'#first-name\').val(), $(\'#last-name\').val(), $(\'#email\').val());\r\n  user.dataString = JSON.stringify(user);\r\n\r\n  // if users Storage is empty create localStorage\r\n  if (!addUserDataToLocalStorage_usersStorage) {\r\n    usersArray = [user.dataString];\r\n    localStorage.setItem("users", JSON.stringify(usersArray));\r\n\r\n    return;\r\n  }\r\n  addToStorage();\r\n\r\n}\r\n\r\nfunction addToStorage() {\r\n\r\n      // check whether user is already in localStorage\r\n      usersArray = JSON.parse(addUserDataToLocalStorage_usersStorage);\r\n      if (usersArray.includes(user.dataString)) {\r\n        return;\r\n      }\r\n\r\n      // and if not change localStorage data\r\n      usersArray.push(user.dataString);\r\n      localStorage.setItem("users", JSON.stringify(usersArray));\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/changeWindowFunctions.js\n\r\n\r\nfunction changeWindow(itemToHide, itemToShow, ...args) {\r\n  $(itemToHide).fadeOut(500, function() {\r\n    $(itemToShow).fadeIn(800);\r\n  });\r\n  if(args) {\r\n    args.forEach(item=> $(item).fadeOut(800));\r\n  }\r\n}\r\n\r\nfunction showWindow(...args ) {\r\n    args.forEach(item=> $(item).fadeIn(800))\r\n}\r\n\r\nfunction hideWindow(...args) {\r\n  args.forEach(item=> $(item).fadeOut(800))\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/classes/Character.js\nclass Character {\r\n\r\n  constructor(xCoordinate, yCoordinate, canvasWidth, canvasHeight) {\r\n\r\n    this.xCoordinate = xCoordinate;\r\n    this.yCoordinate = yCoordinate;\r\n    this.canvasWidth = canvasWidth;\r\n    this.canvasHeight = canvasHeight;\r\n  }\r\n\r\n  decreaseHealth(healthId, taskPoints) {\r\n\r\n    let doc = document;\r\n    let currentPoints = doc.getElementById(healthId).innerHTML;\r\n    let whoIsDead = \'nobody\';\r\n\r\n    if (currentPoints > taskPoints) {\r\n      doc.getElementById(healthId).innerHTML -= taskPoints;\r\n    } else {\r\n      doc.getElementById(healthId).innerHTML = 0;\r\n\r\n      if (healthId == \'playerHealth\') {\r\n        whoIsDead = \'player\';\r\n      } else {\r\n        doc.getElementById("playerScore").innerHTML = +doc.getElementById("playerScore").innerHTML + 1;\r\n        whoIsDead = \'monster\';\r\n      }\r\n    }\r\n    return whoIsDead;\r\n  }\r\n\r\n  resetHealth(healthId) {\r\n    document.getElementById(healthId).innerHTML = 100;\r\n  }\r\n  \r\n}\r\n\n// CONCATENATED MODULE: ./game/js/classes/Player.js\n\r\n\r\n\r\n\r\nclass Player_Player extends Character {\r\n  constructor(xCoordinate, yCoordinate, canvasWidth, canvasHeight, character, width, height, sprite, fullName){\r\n    super(xCoordinate, yCoordinate, canvasWidth, canvasHeight);\r\n    this.character = character;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.sprite = sprite;\r\n    this.fullName = fullName;\r\n\r\n  }\r\n  draw() {\r\n    let ctx = document.getElementById("canvas").getContext(\'2d\');\r\n\r\n    ctx.clearRect(this.xCoordinate, this.yCoordinate, this.width, this.height);\r\n\r\n    this.sprite.xCoordinate =\r\n        (this.sprite.xCoordinate === (this.sprite.width - this.width)\r\n         ? 0\r\n         : this.sprite.xCoordinate + this.width);\r\n\r\n    ctx.drawImage(this.sprite.src, this.sprite.xCoordinate, this.sprite.yCoordinate, this.width, this.height, this.xCoordinate, this.yCoordinate, this.width, this.height);\r\n  }\r\n\r\n  setName () {\r\n    $(\'#userName\').text(this.fullName);\r\n  }\r\n\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/classes/Sprite.js\nclass Sprite{\r\n  constructor(src, width, height, xCoordinate, yCoordinate, columns, rows) {\r\n    this.src = src;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.xCoordinate = xCoordinate;\r\n    this.yCoordinate = yCoordinate;\r\n    this.columns = columns;\r\n    this.rows = rows;\r\n  }\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/drawPlayer.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet player;\r\nlet tickCount = 0;\r\n\r\nfunction drawPlayer() {\r\n\r\n  let character = $(\'input[name=userChoice]:checked\', \'form\').val();\r\n  let sprite = new Image();\r\n\r\n  sprite.src = \'img/\' + character + \'SpriteIdle.png\';\r\n\r\n\r\n  sprite.addEventListener(\'load\', function() {\r\n    let spriteWidth = sprite.width;\r\n    let spriteHeight = sprite.height;\r\n\r\n    let numberOfColumnsInSprite = 10;\r\n    let numberOfRowsInSprite = 1;\r\n\r\n    let playerWidth = Math.floor(spriteWidth / numberOfColumnsInSprite);\r\n    let playerHeight = Math.floor(spriteHeight / numberOfRowsInSprite);\r\n\r\n    let playerCoordinateX = playerWidth / 2;\r\n    let playerCoordinateY = drawCanvas_canvasHeight - playerHeight;\r\n\r\n    let playerSprite = new Sprite(sprite, spriteWidth, spriteHeight, 0, 0, numberOfColumnsInSprite, numberOfRowsInSprite);\r\n\r\n    player = new Player_Player(playerCoordinateX, playerCoordinateY, 1400, drawCanvas_canvasHeight, character, playerWidth, playerHeight, playerSprite, user.fullName);\r\n    \r\n    player.resetHealth("playerHealth");\r\n    player.setName();\r\n    tick();\r\n\r\n\r\n  }, false);\r\n\r\n}\r\n\r\n\r\nfunction tick() {\r\n  if (tickCount > 15) {\r\n    player.draw();\r\n    tickCount = 0;\r\n  }\r\n\r\n  tickCount += 1;\r\n  requestAnimationFrame(tick);\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/generateRandomNumber.js\nfunction generateRandomNumber(min, max) {\r\n  let random = min + Math.random() * (max + 1 - min);\r\n  random = Math.floor(random);\r\n  return random;\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/classes/Monster.js\n\r\n\r\n\r\n\r\nclass Monster_Monster extends Character {\r\n\r\n  constructor(xCoordinate, yCoordinate, canvasWidth, canvasHeight){\r\n    super(xCoordinate, yCoordinate, canvasWidth, canvasHeight);\r\n  }\r\n\r\n  draw(arrayOfParts, drawingFunction) {\r\n    arrayOfParts.forEach( item => drawingFunction(item) );\r\n  }\r\n\r\n  setName(monsterNamesArray) {\r\n    let monsterName = monsterNamesArray.reduce(\r\n      (accumulator, current) =>\r\n      accumulator + \' \' + current[generateRandomNumber(1, (current.length-1))] , \'\'\r\n    );\r\n\r\n    $(\'#monsterName\').text(monsterName);\r\n  }\r\n\r\n  delete() {\r\n    let ctx = document.getElementById("canvas").getContext(\'2d\');\r\n    ctx.clearRect(this.canvasWidth-this.xCoordinate-5, this.canvasHeight-this.yCoordinate, 300, 300);\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//attack: function\r\n\n// CONCATENATED MODULE: ./game/js/classes/MonsterPart.js\n\r\n\r\n// import {canvasWidth, canvasHeight, ctx} from \'../modules/drawCanvas\';\r\n\r\n\r\nclass MonsterPart_MonsterPart extends Monster_Monster {\r\n  constructor(xCoordinate, yCoordinate, canvasWidth, canvasHeight, part, maxNumberOfParts, offset, ctx, drawCoordinateX, drawCoordinateY) {\r\n    super(xCoordinate, yCoordinate, canvasWidth, canvasHeight);\r\n    this.part = part;\r\n    this.offset = offset;\r\n    this.maxNumberOfParts = maxNumberOfParts;\r\n    this.numberOfParts = generateRandomNumber(1, maxNumberOfParts);\r\n    this.src = "img/monster parts/" + this.part + ".png";\r\n    this.ctx = ctx;\r\n    this.drawCoordinateX = drawCoordinateX || Math.floor(this.canvasWidth - xCoordinate);\r\n    this.drawCoordinateY = drawCoordinateY || Math.floor(this.canvasHeight - yCoordinate);\r\n  }\r\n\r\n\r\n  draw() {\r\n    let counter = 1;\r\n\r\n    while (this.numberOfParts >= counter) {\r\n      this.ctx.drawImage(this.image, this.drawCoordinateX, this.drawCoordinateY);\r\n\r\n      counter += 1;\r\n\r\n      if (this.offset === \'horizontal\') {\r\n        this.drawCoordinateX += 40;\r\n      } else {\r\n        this.drawCoordinateY += 40;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/drawMonster.js\n\r\n\r\n\r\n\r\n\r\n\r\nlet monsterTypeArray = ["Ogre", "Dwarf", "Dragon", "Zombie", "Bastard", "Bugger", "Wizard", "Giant", "Elf", "Oni", "Demon", "Undead", "Pony", "Vampire", "Werewolf", "Succubus", "Humanoid", "Halfling", "Golem", "Gnoll", "Fairy", "Manticore", "Frankenstein", "Ex-wife"];\r\n\r\nlet monsterNameArray = ["John", "Will", "Donald", "Bill", "Arnold", "Tom", "Garry", "Ron", "Voldemort", "Jerry", "Anthony", "Eduard", "Eric", "Jeck", "Leo", "Brad", "Li", "Ryan", "Alex", "Dan", "Logan", "Henry", "Pitter", "Sam"];\r\n\r\nlet monsterNickArray = ["Hideous", "Wicked", "Dangerous", "Evil", "Fearsome", "Greedy", "Awful", "Dreadful", "Voracious", "Horrible", "Terrific", "Moody", "Sly", "Cunning", "Mighty", "Silly", "Dumpy", "Crazy", "Stupid", "Dense"];\r\n\r\nlet drawMonster_monsterNamesArray = [monsterTypeArray, monsterNickArray,  monsterNameArray];\r\n\r\nlet monster;\r\n\r\nfunction drawMonster() {\r\n\r\n      monster = new Monster_Monster(300, 200, drawCanvas_canvasWidth, drawCanvas_canvasHeight);\r\n      monster.setName(drawMonster_monsterNamesArray);\r\n      monster.resetHealth(\'monsterHealth\');\r\n\r\n      let arrayOfParts = [];\r\n\r\n      let body = new MonsterPart_MonsterPart(200, 200, drawCanvas_canvasWidth, drawCanvas_canvasHeight, "Body", 1, \'horizontal\', drawCanvas_ctx);\r\n      let foot = new MonsterPart_MonsterPart(200, 50, drawCanvas_canvasWidth, drawCanvas_canvasHeight, "Foot", 4, \'horizontal\', drawCanvas_ctx);\r\n      let rightHand = new MonsterPart_MonsterPart(100, 80, drawCanvas_canvasWidth, drawCanvas_canvasHeight, "RightHand", 2, \'horizontal\', drawCanvas_ctx);\r\n      let leftHand = new MonsterPart_MonsterPart(300, 190, drawCanvas_canvasWidth, drawCanvas_canvasHeight, "LeftHand1", 3, \'vertical\',  drawCanvas_ctx );\r\n\r\n      arrayOfParts.push(body, foot, rightHand, leftHand);\r\n\r\n      monster.draw(arrayOfParts, drawThePart);\r\n\r\n\r\n}\r\n\r\n//we can\'t set listener in constructor, it wouldn\'t work, so we need to set separate function\r\nfunction drawThePart(part) {\r\n  part.image = new Image();\r\n  part.image.src = part.src;\r\n  part.image.addEventListener(\'load\', function() {\r\n  part.draw();\r\n});\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/drawCanvas.js\n\r\n\r\n\r\n\r\n\r\nlet canvas;\r\nlet drawCanvas_ctx;\r\nlet drawCanvas_canvasWidth = 1000;\r\nlet drawCanvas_canvasHeight;\r\n\r\nfunction drawCanvas() {\r\n\r\n  canvas = document.getElementById("canvas");\r\n  if (canvas.getContext) {\r\n\r\n    drawCanvas_ctx = canvas.getContext("2d");\r\n\r\n    canvas.width = drawCanvas_canvasWidth = ($(window).width()) * 0.95;\r\n    canvas.height = drawCanvas_canvasHeight = ($(window).height()) * 0.5;\r\n\r\n    drawPlayer();\r\n    //   console.log(player);//mine\r\n    drawMonster(); //mine\r\n\r\n  } else {\r\n    console.log("браузер не поддерживает canvas");\r\n  };\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/startTheGame.js\n\r\n\r\n\r\n\r\n\r\nfunction startTheGame() {\r\n\r\n  addUserDataToLocalStorage();\r\n  changeWindow(".form-wrapper", ".gameWindow");\r\n  launchSound("BattleTheme", true, true);\r\n  drawCanvas();\r\n\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/showScore.js\n\r\n\r\n\r\n\r\n\r\nlet showScore_usersArray;\r\n\r\nfunction showScore() {\r\n\r\n  setUserScoreInLocaleStorage();\r\n  showScore_usersArray.sort(compareScore);\r\n  showScoreInTable(showScore_usersArray);\r\n  refreshLocaleStorage(showScore_usersArray);\r\n}\r\n\r\nfunction setUserScoreInLocaleStorage() {\r\n\r\n  const usersStorage = localStorage.getItem("users");\r\n  showScore_usersArray = JSON.parse(usersStorage);\r\n  let userIndex = showScore_usersArray.indexOf(user.dataString);\r\n  showScore_usersArray = showScore_usersArray.map(function(item) {\r\n    return JSON.parse(item);\r\n  });\r\n\r\n  showScore_usersArray[userIndex].score = parseInt($(\'#playerScore\').html());\r\n}\r\n//\r\nfunction showScoreInTable(array) {\r\n  let scoreTableLength = 1;\r\n  array.forEach(item => {\r\n    if (item.score && scoreTableLength <= 10 ) { //item.score &&\r\n      let li = document.createElement(\'li\');\r\n      li.innerHTML = scoreTableLength + \'. \' +  item.name + " " + item.surname + ": " + item.score + \' monster(s)\';\r\n      $(\'#scoreList\').append(li);\r\n      scoreTableLength += 1;\r\n    }\r\n  });\r\n  \r\n  showWindow(\'#resultsWindow\', \'#bgOpacity\');\r\n}\r\n\r\nfunction refreshLocaleStorage(array) {\r\n  showScore_usersArray = showScore_usersArray.map(function(item) {\r\n    return JSON.stringify(item);\r\n  });\r\n  localStorage.setItem("users", JSON.stringify(showScore_usersArray));\r\n}\r\n\r\nfunction compareScore(userA, userB) {\r\n  return userB.score - userA.score;\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/classes/Game.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Game_Game {\r\n\r\n  prestart() {\r\n    launchInitialWindow();\r\n  };\r\n  start() {\r\n    startTheGame();\r\n  }\r\n  newRound() {\r\n    setTimeout(launchSound, 2000, "Jingle", true, false);\r\n     setTimeout(monster.delete.bind(monster), 1500);\r\n     setTimeout(drawMonster, 3000);\r\n     setTimeout(launchSound, 3500, "BattleTheme", true, true);\r\n  }\r\n\r\n   finish (winner) {\r\n     winner == \'monster\' ?  setTimeout(launchSound, 2000, "monsterLaughter", true, false) : setTimeout(launchSound, 2000, "Jingle", true, false);\r\n     setTimeout(showScore, 2500);\r\n\r\n}\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/classes/Task.js\nclass Task {\r\n\r\n  constructor(points, func) {\r\n\r\n    this.points = points;\r\n    this.func = func;\r\n  }\r\n\r\n  insertTask (taskDescription) {\r\n    $(\'#taskDescription\').html(taskDescription);\r\n  }\r\n\r\n  addToArrayOfTasks (arrayOfTasks) {\r\n    arrayOfTasks.push(this);\r\n  }\r\n\r\n  setPattern (pattern) {\r\n    $(\'#answerInput\').attr(\'pattern\', pattern);\r\n  }\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/solveArithmeticProblem.js\n\r\n\r\n\r\n\r\n\r\nlet arithmeticTask = new Task(20, solveArithmeticProblem);\r\n\r\nfunction solveArithmeticProblem(obj) {\r\n\r\n  this.arrayOfOperators = [\'*\', \'/\', \'+\', \'-\'];\r\n  this.randomOperator = this.arrayOfOperators[generateRandomNumber(0, this.arrayOfOperators.length - 1)];\r\n\r\n  if (this.randomOperator === "-" || (this.randomOperator === "+")) {\r\n    this.randomlyGeneratedNumber = generateRandomNumber(-50, 50);\r\n    this.randomlyGeneratedNumber1 = generateRandomNumber(-20, 20);\r\n  } else {\r\n    this.randomlyGeneratedNumber = generateRandomNumber(-30, 30);\r\n    this.randomlyGeneratedNumber1 = generateRandomNumber(1, 10);\r\n  }\r\n\r\n\r\n  this.methods = {\r\n    \'-\': function(a, b) {\r\n      return a - b;\r\n    },\r\n    \'+\': function(a, b) {\r\n      return a + b;\r\n    },\r\n    \'/\': function(a, b) {\r\n      return a / b;\r\n    },\r\n    \'*\': function(a, b) {\r\n      return a * b;\r\n    },\r\n  };\r\n\r\n  this.answer = this.methods[this.randomOperator](this.randomlyGeneratedNumber, this.randomlyGeneratedNumber1);\r\n\r\n  //checking if answer is an integer\r\n  if ((this.answer ^ 0) !== this.answer) {\r\n\r\n    this.answer = this.answer.toFixed(1);\r\n  }\r\n\r\n\r\n  this.insertTask(\r\n    `<p>Enter an answer without whitespaces.</p>\r\n    <p> If the answer is not an integer, write it through the dot with 1 character after this</p>\r\n    <p> ${this.randomlyGeneratedNumber}  ${this.randomOperator} ${this.randomlyGeneratedNumber1} =  </p>`);\r\n\r\n  this.setPattern("-?[0-9]{1,4}\\.?[0-9]?");\r\n\r\n  this.answer += \'\';\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/classes/DictionaryTask.js\n\r\n\r\n\r\n\r\nclass DictionaryTask_DictionaryTask extends Task {\r\n\r\n  constructor(points, func) {\r\n    super(points, func);\r\n  }\r\n\r\n  static downloadDictionary() {\r\n\r\n    return fetch("database/dict.json")\r\n\r\n      .then(function(response) {\r\n        return response.json();\r\n      })\r\n  }\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/translationTask.js\n\r\n\r\n\r\n\r\n\r\nlet translationTask = new DictionaryTask_DictionaryTask(30, launchTranslationTask);\r\n\r\nfunction launchTranslationTask(obj) {\r\n\r\n      DictionaryTask_DictionaryTask.downloadDictionary()\r\n\r\n    .then(function(dictionaryArray) {\r\n\r\n      translationTask.randomNumber = generateRandomNumber(0, dictionaryArray.length-1);\r\n\r\n      translationTask.answer = dictionaryArray[translationTask.randomNumber][2];\r\n\r\n      translationTask.question = dictionaryArray[translationTask.randomNumber][0];\r\n\r\n      translationTask.insertTask(`Translate from English to Russian: ${translationTask.question}`);\r\n\r\n      translationTask.setPattern("[А-Яа-я]{2,}");\r\n\r\n      });\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/sortTask.js\n\r\n\r\n\r\n\r\n\r\nlet sortTask = new DictionaryTask_DictionaryTask(15, launchSortTask);\r\n\r\nfunction launchSortTask(obj) {\r\n\r\n  DictionaryTask_DictionaryTask.downloadDictionary()\r\n\r\n    .then(function(dictionaryArray) {\r\n\r\n      sortTask.randomNumber = generateRandomNumber(0, dictionaryArray.length - 1); //todo in class?\r\n      sortTask.answer = dictionaryArray[sortTask.randomNumber][0];\r\n      sortTask.insertTask(`<p>Make up a word or write it down</p><ul id="sort" class=\'sortable\'></ul>`);\r\n      sortTask.setPattern("[A-Za-z]{2,}");\r\n\r\n      let wordArray = sortTask.answer.split("");\r\n      wordArray.sort(function() {\r\n        return .5 - Math.random();\r\n      });\r\n\r\n      wordArray.forEach(item => {\r\n        let li = document.createElement(\'li\');\r\n        li.setAttribute(\'id\', item);\r\n        li.innerHTML = item;\r\n        $(\'#sort\').append(li);\r\n\r\n      })\r\n\r\n      $("#sort").sortable({\r\n        update: function(event, ui) {\r\n          //check if correct\r\n          let sortedIDs = $("#sort").sortable("toArray").join("");\r\n\r\n          if (sortedIDs == sortTask.answer) {\r\n            sortTask.isAnswerRight = true;\r\n            $(\'#SubmitTheAnswer\').submit();\r\n\r\n          }\r\n        }\r\n      });\r\n    });\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/listeningTask.js\n\r\n\r\n\r\n\r\n\r\n\r\nlet listeningTask = new DictionaryTask_DictionaryTask(15, launchListeningTask);\r\n\r\nfunction launchListeningTask(obj) {\r\n\r\n  DictionaryTask_DictionaryTask.downloadDictionary()\r\n\r\n    .then(function(dictionaryArray) {\r\n\r\n      listeningTask.randomNumber = generateRandomNumber(0, dictionaryArray.length - 1); //todo in class?\r\n\r\n      listeningTask.answer = dictionaryArray[listeningTask.randomNumber][0];\r\n\r\n      listeningTask.question = dictionaryArray[listeningTask.randomNumber][0];\r\n\r\n      listeningTask.insertTask(`<p>Write the word in English</p>\r\n        <button id=\'spellingButton\'>Push to launch audio</button> `);\r\n\r\n      listeningTask.setPattern("[A-Za-z]{2,}");\r\n\r\n      $(\'#spellingButton\').click(function() {\r\n        pauseTheSound();\r\n        let synth = window.speechSynthesis;\r\n        let utterThis = new SpeechSynthesisUtterance(listeningTask.answer);\r\n        utterThis.lang = \'en-US\';\r\n        synth.speak(utterThis);\r\n        setTimeout(resumeTheSound, 2000);\r\n      })\r\n\r\n    });\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/primePowerTask.js\n\r\n\r\n\r\n\r\n\r\nlet primePowerTask = new Task(10, launchPrimePowerTask);\r\n\r\nfunction launchPrimePowerTask(obj) {\r\n\r\n  this.answer = generateRandomNumber(2, 8) + "";\r\n  this.randomlyGeneratedNumber = generateRandomNumber(1, 100) + "";\r\n  this.taskDescriptionString = ` + ${this.randomlyGeneratedNumber}`.repeat(this.answer - 1);\r\n  this.insertTask(\r\n    `<p>What is the prime power of the number</p>\r\n    <p> ${this.randomlyGeneratedNumber}  ${this.taskDescriptionString} </p>`\r\n  );\r\n\r\n  this.setPattern("[0-9]{1}");\r\n  this.answer += \'\';\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/classes/Spell.js\n\r\n\r\n\r\n\r\nclass Spell_Spell extends Character {\r\n\r\n  constructor(xCoordinate, yCoordinate, canvasWidth, canvasHeight, image, width, height, borderCoordinateX, direction) {\r\n    super(xCoordinate, yCoordinate, canvasWidth, canvasHeight)\r\n    this.image = image;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.borderCoordinateX = borderCoordinateX;\r\n    this.direction = direction;\r\n  }\r\n\r\n  draw() {\r\n    let ctx = document.getElementById("canvas").getContext(\'2d\');\r\n    ctx.clearRect(this.xCoordinate, this.yCoordinate, this.width, this.height);\r\n    this.xCoordinate += this.direction;\r\n    ctx.drawImage(this.image, this.xCoordinate, this.yCoordinate);\r\n\r\n  }\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/launchSpellAnimation.js\n\r\n\r\n\r\n\r\n\r\n\r\nlet spell;\r\n\r\nfunction launchSpellAnimation(target) {\r\n  let spellImage = new Image();\r\n\r\n  let spellCoordinateY = player.yCoordinate + player.height / 2;\r\n\r\n  spellImage.src = \'img/blades.png\';\r\n\r\n  spellImage.addEventListener(\'load\', function() {\r\n\r\n    let spellWidth = spellImage.width;\r\n    let spellHeight = spellImage.height;\r\n\r\n    let spellCoordinateX;;\r\n    let spellBorderCoordinateX;\r\n    let spellAnimationDirection;\r\n\r\n    if (target === \'monster\') {\r\n\r\n      spellCoordinateX = player.xCoordinate + player.width / 2;\r\n      spellBorderCoordinateX = player.canvasWidth - 430 - spellWidth;\r\n      spellAnimationDirection = 10;\r\n\r\n    } else {\r\n      spellCoordinateX = player.canvasWidth - 450 - spellWidth;\r\n      spellBorderCoordinateX = player.xCoordinate + player.width / 2;\r\n      spellAnimationDirection = -10;\r\n    }\r\n\r\n    spell = new Spell_Spell(spellCoordinateX, spellCoordinateY, player.canvasWidth, player.canvasHeight, spellImage, spellWidth, spellHeight, spellBorderCoordinateX, spellAnimationDirection);\r\n\r\n    animateSpell();\r\n\r\n  });\r\n\r\n}\r\n\r\nfunction animateSpell() {\r\n  spell.draw();\r\n  spell.requestAnimationSpellId = requestAnimationFrame(animateSpell);\r\n  checkBorder();\r\n}\r\n\r\n\r\nfunction checkBorder() {\r\n  if (spell.direction > 0) {\r\n    if (spell.xCoordinate > spell.borderCoordinateX) {\r\n\r\n      cancelAnimation() ;\r\n    }\r\n  }\r\n  else {\r\n    if (spell.xCoordinate < spell.borderCoordinateX) {\r\n\r\n      cancelAnimation() ;\r\n    }\r\n  }\r\n}\r\n\r\nfunction cancelAnimation() {\r\n\r\n  cancelAnimationFrame(spell.requestAnimationSpellId);\r\n  drawCanvas_ctx.clearRect(spell.xCoordinate, spell.yCoordinate, spell.width, spell.height);\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/modules/launchTask.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet arrayOfTasks = [arithmeticTask, translationTask, sortTask, listeningTask, primePowerTask];\r\n\r\nlet task;\r\n\r\nfunction launchTask(taskNumber) {\r\n  //implement task function\r\n  task = arrayOfTasks[taskNumber];\r\n\r\n  arrayOfTasks[taskNumber].func(this);\r\n\r\n}\r\n\r\nfunction checkAnswer(taskNumber) {\r\n  let correctAnswer = arrayOfTasks[taskNumber].answer;\r\n  //answer\r\n  let isRight;\r\n  let whoIsDead;\r\n\r\n\r\n\r\n  let userAnswer = $(\'form [name="user-answer"]\').val();\r\n  let arrayOfAnswers = correctAnswer.split(", ");\r\n  arrayOfAnswers = arrayOfAnswers.map(item => new RegExp(item, \'i\'));\r\n\r\n  arrayOfAnswers.forEach(item => {\r\n    if (item.test(userAnswer)) {\r\n      isRight = true;\r\n    }\r\n  });\r\n\r\n  if (isRight || arrayOfTasks[taskNumber].isAnswerRight) { //for sortable check\r\n\r\n  //  alert(\'yep\');\r\n    launchSpellAnimation(\'monster\');\r\n\r\n    whoIsDead = monster.decreaseHealth("monsterHealth", task.points);\r\n\r\n  } else {\r\n  //  alert(\'nope\');\r\n    launchSpellAnimation(\'player\');\r\n    whoIsDead = player.decreaseHealth("playerHealth", task.points);\r\n  }\r\n\r\n  setTimeout(launchSound, 600, "Blast", false, false);\r\n\r\n  return whoIsDead;\r\n}\r\n\n// CONCATENATED MODULE: ./game/js/main1.js\n\r\n\r\n\r\n\r\n\r\n\r\n$(document).ready(function() {\r\n\r\n  let game = new Game_Game();\r\n  game.prestart();\r\n\r\n  $("#userDataForm").submit(function(event) {\r\n\r\n    event.preventDefault();\r\n    game.start();\r\n\r\n  });\r\n\r\n  $("#spellsChoosingButton").click(function() {\r\n    showWindow("#bgOpacity", "#modalWindow");\r\n  });\r\n\r\n  let taskNumber\r\n\r\n  $(\'#spellsList\').click(function(event) {\r\n\r\n    if ($(event.target).attr(\'id\') == \'close\') {\r\n      hideWindow(\'#modalWindow\', \'#bgOpacity\');\r\n    } else {\r\n      changeWindow(\'#modalWindowWrapper\', \'#taskWrapper\');\r\n      taskNumber = $(event.target).attr(\'id\') - 1;\r\n      launchTask(taskNumber);\r\n\r\n    }\r\n  });\r\n\r\n  $(\'#userAnswer\').submit(function(e) {\r\n    e.preventDefault();\r\n    let whoIsDead = checkAnswer(taskNumber);\r\n\r\n    if (whoIsDead == \'player\') {\r\n      //alert(\'Dead\');\r\n      setTimeout(game.finish(\'monster\'), 2000);\r\n    } else if (whoIsDead == \'monster\') {\r\n    //  alert("new Round");\r\n      setTimeout(game.newRound(), 2000);\r\n    }\r\n    changeWindow(\'#modalWindow\', \'#modalWindowWrapper\', \'#bgOpacity\');\r\n\r\n  });\r\n\r\n  $(\'#menu\').click(function() {\r\n    showWindow(\'#menuWindow\', \'#bgOpacity\');\r\n  });\r\n\r\n  $(\'#menuContent\').click(function(e) {\r\n    switch ($(e.target).attr(\'id\')) {\r\n      case \'startNewGame\':\r\n        hideWindow(\'#menuWindow\', \'#bgOpacity\');\r\n        game.start();\r\n        break;\r\n      case "finishGame":\r\n        hideWindow(\'#menuWindow\', \'#bgOpacity\');\r\n        game.finish(\'player\');\r\n        break;\r\n      case \'closeMenu\':\r\n        hideWindow(\'#menuWindow\', \'#bgOpacity\');\r\n        break;\r\n    }\r\n\r\n  });\r\n\r\n  $("#resultsContent").click(function(e) {\r\n    if ($(e.target).attr(\'id\') == \'startNewGame\') {\r\n      hideWindow(\'#resultsWindow\', \'#bgOpacity\');\r\n      game.start();\r\n    } else if ($(e.target).attr(\'id\') == \'exit\') {\r\n      let myWindow = window.open("", "_self");\r\n      myWindow.document.write("");\r\n      setTimeout(function() {\r\n        myWindow.close();\r\n      }, 1000);\r\n\r\n    }\r\n  });\r\n\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},1:function(c,n,r){r(0),c.exports=r(14)},14:function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9nYW1lL3Njc3Mvc3R5bGUuc2Nzcz84Njc0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjE0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///14\n")}});